{"version":3,"file":"static/js/145.afefe356.chunk.js","mappings":"iIAAA,qhG","sources":["components/blog/articles/devlog 001.md"],"sourcesContent":["export default \"   \\n   My first devlog. I started this project with the idea of creating a multipurpose unifying software solution that could fill the huge gap in the field of kinesiology, physical rehabilitation and follow up of in-patients, out-patients and management of multiple people.\\n   \\n   It is about time that we start to develop something that will allow people from the simplest fitness instructor, to the PT doctorate, to actually have their anamnestic, evaluation, planning, follow up and periodic testing up to conclusion of the follow up of the patient within a single software solution rather than a piece of paper or Microsoft Excel.\\n   A purposed software solution is paramount even as a professional trademark which will improve substantially how for example the professional figure of the kinesiologist is perceived or it works in Italy. This will eventually serve and establish professional best practices, hopefully, and transform the kinesiologist, the instructors and the physical therapist into well respected professionals.\\n   \\n   I was indecisive on the framework I wanted to use to develop this app. At first glaring towards C# and the .NET for a seamless development of a windows native desktop app, eventually disregarded as I needed something more modern, easily implementable and not too harsh on both my machines that wouldn't eventually want to home Visual Studio with gigabytes of dependencies. Came to knowledge about Electron.js and how it has been used for Discord for example and other important apps such as Obsidian (which I'm using to write this post) and immediately felt interested. The combination of web languages, which I'm keen on and apt to use would signify for me a much faster process; not that speed is my goal, since I'm planning this to be a multiple years project.\\n   Eventually I'm starting the project in Tauri framework, which is basically a more lightweight, safe and performant alternative to Electron.js which is leveraging Rust as the backend core. I will want to integrate it with React.js for the frontend logic, eventually I will need some more dependencies for the UI styling or other features, but not so much.\\n   \\n   How GTP defined my app in a few words:\\n   \\n   > *Fulcrum is designed to be a comprehensive management and workflow facilitator for professionals in fields like kinesiology, exercise physiology, physical therapy, and personal training. It's meant to streamline and enhance their work processes, particularly in managing client data, training programs, workouts, and exercises.*\\n   \\n   Kind of interested in integrating a little bit of Julia in the App if I'm able too. Eager to learn Rust as a code since I've read that it's a multipurpose highly efficient language that has high backend capabilities and I'm really not interested in learning Java to be honest.\\n   \\n   At the moment I still did not initialize any project. Still lacking VS Code and all the basic needed features (formatted my Pc recently). I'm still on the technical document of specs to have the idea in the clearest way possible.\";"],"names":[],"sourceRoot":""}